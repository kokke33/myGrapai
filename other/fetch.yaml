version: 0.3
nodes:
  # url:
  #   value: "https://www.tss.co.jp/Default.aspx"  # Holds the RSS feed URL
  # rssFeed:
  #   # Fetchs the RSS feed from the specified feed
  #   agent: fetchAgent 
  #   params:
  #     type: text
  #   inputs:
  #       - :url


  # url:
  #   value: "https://www.google.com/search?q=hello"
  # fetch:
  #   agent: "fetchAgent"
  #   params:
  #     type: "text"
  #   inputs: 
  #     - ":url"
  # success:
  #   agent: "copyAgent"
  #   isResult: true
  #   unless: ":fetch.onError"
  #   inputs: [true]
  # error:
  #   agent: "copyAgent"
  #   isResult: true
  #   if: ":fetch.onError"
  #   inputs: [":fetch.onError"]


  url:
    value: "https://www.google.com/search?q=明治天皇"
  fetch:
    agent: "fetchAgent"
    params:
      type: "text"
    inputs: 
      - ":url"
      # body: "Posting data"
  success:
    agent: "copyAgent"
    isResult: true
    unless: ":fetch.onError"
    inputs: [:fetch]
  error:
    agent: "propertyFilterAgent"
    params:
      include: ["message", "status"]
    isResult: true
    if: ":fetch.onError"
    inputs: [":fetch.onError"]
  chunks:
    console:
      before: ...splitting the article into chunks
    agent: stringSplitterAgent
    inputs:
      - :wikipedia.content
  embeddings:
    console:
      before: ...fetching embeddings for chunks
    agent: stringEmbeddingsAgent
    inputs:
      - :chunks.contents
  topicEmbedding:
    console:
      before: ...fetching embedding for the topic
    agent: stringEmbeddingsAgent
    inputs:
      - :source.topic
  similarityCheck:
    agent: dotProductAgent
    inputs:
      - :embeddings
      - :topicEmbedding.$0
  sortedChunks:
    agent: sortByValuesAgent
    inputs:
      - :chunks.contents
      - :similarityCheck
  referenceText:
    agent: tokenBoundStringsAgent
    inputs:
      - :sortedChunks
    params:
      limit: 5000
  prompt:
    agent: stringTemplateAgent
    inputs:
      - :source.query
      - :referenceText.content
    params:
      template: |-
        Using the following document, ${0}

        ${1}
  RagQuery:
    console:
      before: ...performing the RAG query
    agent: openAIAgent
    inputs:
      - :prompt
  OneShotQuery:
    agent: openAIAgent
    inputs:
      - :source.query
  RagResult:
    agent: copyAgent
    inputs:
      - :RagQuery.choices.$0.message.content
    isResult: true
  OneShotResult:
    agent: copyAgent
    inputs:
      - :OneShotQuery.choices.$0.message.content
    isResult: true