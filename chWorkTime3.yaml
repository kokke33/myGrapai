version: 0.3
loop:
  while: :continue
nodes:
  # 繰り返し定義
  # continue:
  #   value: true
  #   update: :llm.choices.$0.message.content
  continue:
    value: true
    # update: :llm.choices.$0.message.content
    update: :checkInput.continue

  # 最終結果の出力
  information:
    value: {}
    update: :argumentsParser
    isResult: true

  # メッセージ
  messages:
    value:
      - role: system
        content: >
          以下4つの情報をユーザーから取得することがあなたの責任です。
          連続6時間以上の勤務にならないよう確認してください。

          1.workStartTime
          2.workEndTime
          3.breakTimeStart
          4.breakTimeEnd        

          必ず１つ１つ確実に質問をしてください。一度に質問することはダメです。
          1.workStartTime:
            24時間表記で。HHMM形式でも許可。

          2.workEndTime:
            24時間表記で。HHMM形式でも許可。

          3.労働時間を把握:
            workEndTimeの情報から労働時間を把握してください。

          4.休憩時間（breakTimeEndとbreakTimeStart）:
            以下の条件を満たしてください。
            ・1時間単位とする。休憩時間は必ず「XX:00」のように分は00とすること。
            ・workStartTimeが08時30分～10時00分の場合は、workStartTimeから6時間後に1回目の1時間の休憩をしたと
              みなします。しかしこの場合は申請は不要です。
            ・1回目の休憩終了時間から計算して、残りの勤務時間が連続6時間あれば、さらに6時間ごとに1時間休憩が必要です。
              最終的に何時間の休憩が必要かをステップバイステップで説明してください。
            ・退社時間と休憩終了時間と同じ場合は、休憩開始時間を早めることで同じにならないようにしてください。
            ・1回目の休憩終了時間から計算して、残りの勤務時間が6時間未満の場合は休憩は不要です。
            
            4-1.breakTimeStart:24時間表記で。HHMM形式でも許可。不要な場合もある。
            4-2.breakTimeEnd:24時間表記で。HHMM形式でも許可。不要な場合もある。

          ステップバイステップで考えてください。
          上記4つの情報をすべて取得したら、【出力サンプル】のレイアウトに沿って結果を表示し、
          関数 'report' を呼び出してください。

          【出力サンプル】
             AI: 先ほどの計算で出社時間が7:00、退社時間が21:00となり、労働時間が14時間となります。

            これに基づき、休憩時間を設定する必要があります。まず、最初の6時間後に1回目の休憩を取ると仮定します。

            1回目の休憩:
            - 休憩開始時間: 13:00
            - 休憩終了時間: 14:00

            次に、1回目の休憩終了時間から計算して、さらに6時間後に2回目の休憩を取る必要があります。

            2回目の休憩:
            - 休憩開始時間: 20:00
            - 休憩終了時間: 21:00

            このように設定すると、2回目の休憩終了時間が退社時間と同じになってしまうため、2回目の休憩開始時間を早める必要があります。

            2回目の修正休憩:
            - 休憩開始時間: 19:00
            - 休憩終了時間: 20:00

    update: :reducer

  userInput:
    agent: textInputAgent
    params:
      message: "あなた:"
    # console:
    #   before: 勤怠情報をまとめます。まずは名前を教えてください。

  userMessage:
    agent: propertyFilterAgent
    params:
      inject:
        - propId: content
          from: 1
    inputs:
      - role: user
      - :userInput

  appendedMessages:
    agent: pushAgent
    inputs:
      - :messages
      - :userMessage
      
# LLM
  llm:
    agent: openAIAgent
    params:
      model: gpt-4o
    # agent: groqAgent
    # params:
    #   model: Llama3-70b-8192
      tools:
        - type: function
          function:
            name: report
            description: ユーザーから取得した情報を報告してください。
            parameters:
              type: object
              properties:
                # userName:
                #   type: string
                #   description: 勤務者の名前
                # date:
                #   type: string
                #   description: 勤務日(yyyy/mm/dd)
                # weekday:
                #   type: string
                #   description: 勤務日の曜日
                workStartTime:
                  type: string
                  description: 出社時間（hh:mm）
                workEndTime:
                  type: string
                  description: 退社時間（hh:mm）
                breakTimeStart:
                  type: string
                  description: 休憩開始時間（hh:mm）※複数回ある場合もあります
                breakTimeEnd:
                  type: string
                  description: 休憩終了時間（hh:mm）※複数回ある場合もあります
                # workTotalTime:
                #   type: string
                #   description: 退社時間から出社時間を減算した勤務時間
                # workRestTime:
                #   type: string
                #   description: 休憩時間          
              required:
                # - userName
                # - date
                # - weekday
                - workStartTime
                - workEndTime
                - breakTimeStart
                - breakTimeEnd
                # - workTotalTime
                # - workRestTime
    inputs:
      - null
      - :appendedMessages
  
  # Json形式に修正
  argumentsParser:
    agent: jsonParserAgent
    # agent: copyAgent
    inputs:
      - :meaning_llm.choices.$0.message.content
    # if: :llm.choices.$0.message.tool_calls
    if: :meaning_llm.choices.$0.message.content

  # LLMの結果を返却
  output:
    agent: stringTemplateAgent
    params:
      template: "\e[32mAI\e[0m: ${0}"
    console:
      after: true
    inputs:
      - :llm.choices.$0.message.content
    if: :llm.choices.$0.message.content

  # LLMの結果を配列に入れる
  reducer:
    agent: pushAgent
    inputs:
      - :appendedMessages
      - :llm.choices.$0.message

  # 結果に対してLLMで情報追加
  meaning_llm:
    agent: openAIAgent
    params:
      model: gpt-4o
      system: >
        "入力データをもとに、以下を追加して。
          1.深夜時間を追加（22時～05時の間は深夜時間）
          2.コメントを追加（労働基準監督者としてインプットの労働状況に対してコメントを100字以内で述べて）
        "
    inputs:
      - :llm.choices.$0.message.tool_calls.$0.function.arguments
    if: :llm.choices.$0.message.tool_calls
  
  # meaning_llmの結果がある場合はループを抜けるためにFalseを返す
  LastAnsewerFlg:
    agent: copyAgent
    inputs:
      - :meaning_llm.choices.$0.message.content
    if: :meaning_llm.choices.$0.message.content

  checkInput:
    agent: propertyFilterAgent
    params:
      inspect:
        - propId: continue
          notEqual: :LastAnsewerFlg
    inputs:
      - {}
      - :userInput