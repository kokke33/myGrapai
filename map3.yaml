
version: 0.3
nodes:
  #変数定義 
  # source1:
  #   value: ["hello", "hello2"]
  userInput:
    agent: textInputAgent
    params:
      message: "入力１して:"
  userInput2:
    agent: textInputAgent
    params:
      message: "入力２して:"
    inputs: 
      - :userInput

  #インプットの複数データをそれぞれ配列に詰める 
  userInputs:
    agent: pushAgent
    inputs:
      - []
      - :userInput
      - :userInput2

  # 最初のネストノード
  nestedNode1:
    # nestedAgent ：結果は XX,YY といった感じ。文字,つながり
    # mapAgent ：結果は [XX,YY] といった感じ配列型。
    # agent: "nestedAgent"
    agent: "mapAgent"
    inputs: 
      - ":userInputs"
    graph:
      version: 0.3
      nodes:
        # バイパスしているだけ意味なしサンプルとして残す
        bypass_sample:
          agent: "bypassAgent"
          inputs: [:$0]
          isResult: true
        prompt:
          agent: stringTemplateAgent
          params:
            template: > 
              ${0}の色は？
              余計なことは言わず、色だけを日本語で回答して。
          inputs: [:$0]
        llm:
          agent: openAIAgent
          params:
            model: gpt-4o
          inputs: [:prompt]
        result_llm:
          agent: copyAgent
          inputs: [:llm.choices.$0.message.content]
          isResult: true

  # 最初のネストノードの結果をインプットにした処理
  nestedNode1_result:
    agent: "bypassAgent"
    inputs: [":nestedNode1.result_llm"]
    isResult: true

  # その結果を受けて、別のmapエージェントにインプット
  nestedNode2:
    agent: "mapAgent"
    inputs: [:nestedNode1.result_llm]
    graph:
      version: 0.3
      nodes:
        stringTemplateAgent_node:
          agent: "stringTemplateAgent"
          params:
            template: "\e[32mstringTemplateAgent出力\e[0m: ${0}"
          # contoleは必須
          console:
            after: true
          # stringTemplateAgentのinputsは改行できない
          inputs: [:$0] 
          isResult: true
        # LLM
        prompt:
          agent: stringTemplateAgent
          params:
            template: > 
                ${0} 色をしている他の果物は？回答だけを日本語で２０字以内で回答して。
          inputs: [:$0]
        llm:
          agent: openAIAgent
          params:
            model: gpt-4o
          inputs: [:prompt]
        result_llm:
          agent: copyAgent
          inputs: [:llm.choices.$0.message.content]
          isResult: true

  # ネストノード２の結果をインプットにした処理
  nestedNode2_result:
    agent: "bypassAgent"
    inputs: [":nestedNode2.result_llm"]
    isResult: true          

  # その結果を受けて、別のmapエージェントにインプット
  nestedNode3:
      agent: "mapAgent"
      inputs: [:nestedNode2.result_llm]
      graph:
        version: 0.3
        nodes:
          # stringTemplateAgent_node:
          #   agent: "stringTemplateAgent"
          #   params:
          #     template: "\e[32mstringTemplateAgent出力\e[0m: ${0}"
          #   # contoleは必須
          #   console:
          #     after: true
          #   # stringTemplateAgentのinputsは改行できない
          #   inputs: [:$0] 
          #   isResult: true
          # LLM
          prompt:
            agent: stringTemplateAgent
            params:
              template: > 
                  ${0}についてどうおもう？日本語で２０字以内で回答して。
            inputs: [:$0]
          llm:
            agent: openAIAgent
            params:
              model: gpt-4o
            inputs: [:prompt]
          result_llm:
            agent: copyAgent
            inputs: [:llm.choices.$0.message.content]
            isResult: true

  # ネストノード３の結果をインプットにした処理
  nestedNode3_result:
    agent: "bypassAgent"
    inputs: [":nestedNode3.result_llm"]
    isResult: true    