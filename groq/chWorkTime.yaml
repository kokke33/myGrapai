version: 0.3
loop:
  while: :continue
nodes:
  continue:
    value: true
    update: :llm.choices.$0.message.content
  information:
    value: {}
    update: :argumentsParser
    isResult: true
  messages:
    value:
      - role: system
        content: >
          以下の情報をユーザーから取得することがあなたの責任です。
          １つ１つ確実に質問をしてください。

          1.userName: 以下の条件を満たしてください。
            姓と名の両方をかならず確認すること。
            2.ひらがなの場合は漢字が必要である事を伝えて漢字の情報を聞き直してください。
            3.2.をいちど聞き直したのちは、漢字以外でもよいです。
            4.漢字以外がある場合は、念のため聞き直してください。
            5.絶対に勝手に漢字を勝手に推測してはいけません。

          2.date: yyyy/mm/dd のフォーマットで。今日なら今日の日付を取得して埋めてください。

          3.workStartTime: 24時間表記で。HHMM形式でも許可。

          4.workEndTime: 24時間表記で。HHMM形式でも許可。

          上記4つの情報をすべて取得したら、関数 'report' を呼び出してください。

    update: :reducer
  userInput:
    agent: textInputAgent
    params:
      message: "あなた:"
    # console:
    #   before: 勤怠情報をまとめます。まずは名前を教えてください。
  userMessage:
    agent: propertyFilterAgent
    params:
      inject:
        - propId: content
          from: 1
    inputs:
      - role: user
      - :userInput
  appendedMessages:
    agent: pushAgent
    inputs:
      - :messages
      - :userMessage
  llm:
    agent: openAIAgent
    params:
      model: gpt-4o
    # agent: groqAgent
    # params:
    #   model: Llama3-70b-8192
      tools:
        - type: function
          function:
            name: report
            description: ユーザーから取得した情報を報告してください。
            parameters:
              type: object
              properties:
                userName:
                  type: string
                  description: 勤務者の名前
                date:
                  type: string
                  description: 勤務日
                # weekday:
                #   type: string
                #   description: 勤務日の曜日
                workStartTime:
                  type: string
                  description: 出社時間（hh:mm）
                workEndTime:
                  type: string
                  description: 退社時間（hh:mm）
                # workTotalTime:
                #   type: string
                #   description: 退社時間から出社時間を減算した勤務時間
                # workRestTime:
                #   type: string
                #   description: 休憩時間          
              required:
                - name
                - date
                # - weekday
                - workStartTime
                - workEndTime
                # - workTotalTime
                # - workRestTime
    inputs:
      - null
      - :appendedMessages
  
  # Json形式に修正
  argumentsParser:
    agent: jsonParserAgent
    inputs:
      - :meaning_llm.choices.$0.message.content
    if: :llm.choices.$0.message.tool_calls

  # 結果に対してLLMで情報追加
  meaning_llm:
    agent: openAIAgent
    params:
      model: gpt-4o
      system: >
        "入力データをもとに、以下を追加して。
          1.weekdayを追加
          2.休憩時間を追加（労働時間が6時間以上の場合は1時間必要）
          3.深夜時間を追加（22時～05時の間は深夜時間）"
    inputs:
      - :llm.choices.$0.message.tool_calls.$0.function.arguments
    if: :llm.choices.$0.message.tool_calls
  
  # 次の結果
  output:
    agent: stringTemplateAgent
    params:
      template: "\e[32mAIDoctor\e[0m: ${0}"
    console:
      after: true
    inputs:
      - :llm.choices.$0.message.content
    if: :llm.choices.$0.message.content

  # LLMの結果を配列に入れる
  reducer:
    agent: pushAgent
    inputs:
      - :appendedMessages
      - :llm.choices.$0.message


